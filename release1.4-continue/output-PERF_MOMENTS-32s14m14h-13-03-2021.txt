[999D[KPASS src/test/PERF_MOMENTS.test.ts (45.676s)
  PERF_LOAD_IMAGE
    for "HD163296_CO_2_1.fits"
      âœ“ CARTA is ready & Send a Session: (25ms)
      Go to "set_QA_performance/cube_B" folder
        open the file "set_QA_performance/cube_B/HD163296_CO_2_1.fits"
          âœ“ (Step 1)"HD163296_CO_2_1.fits" OPEN_FILE_ACK and REGION_HISTOGRAM_DATA should arrive within 5000 ms (42ms)
          âœ“ (Step 2)"HD163296_CO_2_1.fits" Set region, the responses should arrive within 5000 ms (597ms)
      Moment generator
        âœ“ (Step 3)"HD163296_CO_2_1.fits": Receive a series of moment progress within 400000ms (3730ms)
        âœ“ Receive 13 REGION_HISTOGRAM_DATA
        âœ“ Assert MomentResponse.success = true (1ms)
        âœ“ Assert MomentResponse.openFileAcks.length = 13
        âœ“ Assert all MomentResponse.openFileAcks[].success = true (1ms)
        âœ“ Assert all openFileAcks[].fileId > 0 (4ms)
        âœ“ Assert openFileAcks[].fileInfo.name (1ms)
      Requset moment image
        âœ“ (Step 4)"HD163296_CO_2_1.fits": Receive all image data until RasterTileSync.endSync = true, within 5000ms (39ms)
        âœ“ Assert RASTER_TILE_SYNC.fileId (1ms)
        âœ“ Receive RASTER_TILE_DATA
        âœ“ Assert RASTER_TILE_DATA.fileId
    for "HD163296_CO_2_1.image"
      âœ“ CARTA is ready & Send a Session: (3ms)
      Go to "set_QA_performance/cube_B" folder
        open the file "set_QA_performance/cube_B/HD163296_CO_2_1.image"
          âœ“ (Step 1)"HD163296_CO_2_1.image" OPEN_FILE_ACK and REGION_HISTOGRAM_DATA should arrive within 5000 ms (119ms)
          âœ“ (Step 2)"HD163296_CO_2_1.image" Set region, the responses should arrive within 5000 ms (500ms)
      Moment generator
        âœ“ (Step 3)"HD163296_CO_2_1.image": Receive a series of moment progress within 400000ms (3561ms)
        âœ“ Receive 13 REGION_HISTOGRAM_DATA (1ms)
        âœ“ Assert MomentResponse.success = true
        âœ“ Assert MomentResponse.openFileAcks.length = 13
        âœ“ Assert all MomentResponse.openFileAcks[].success = true (2ms)
        âœ“ Assert all openFileAcks[].fileId > 0 (2ms)
        âœ“ Assert openFileAcks[].fileInfo.name (1ms)
      Requset moment image
        âœ“ (Step 4)"HD163296_CO_2_1.image": Receive all image data until RasterTileSync.endSync = true, within 5000ms (33ms)
        âœ“ Assert RASTER_TILE_SYNC.fileId (1ms)
        âœ“ Receive RASTER_TILE_DATA
        âœ“ Assert RASTER_TILE_DATA.fileId
    for "HD163296_CO_2_1.hdf5"
      âœ“ CARTA is ready & Send a Session: (3ms)
      Go to "set_QA_performance/cube_B" folder
        open the file "set_QA_performance/cube_B/HD163296_CO_2_1.hdf5"
          âœ“ (Step 1)"HD163296_CO_2_1.hdf5" OPEN_FILE_ACK and REGION_HISTOGRAM_DATA should arrive within 5000 ms (120ms)
          âœ“ (Step 2)"HD163296_CO_2_1.hdf5" Set region, the responses should arrive within 5000 ms (651ms)
      Moment generator
        âœ“ (Step 3)"HD163296_CO_2_1.hdf5": Receive a series of moment progress within 400000ms (3940ms)
        âœ“ Receive 13 REGION_HISTOGRAM_DATA
        âœ“ Assert MomentResponse.success = true (1ms)
        âœ“ Assert MomentResponse.openFileAcks.length = 13
        âœ“ Assert all MomentResponse.openFileAcks[].success = true (1ms)
        âœ“ Assert all openFileAcks[].fileId > 0
        âœ“ Assert openFileAcks[].fileInfo.name (1ms)
      Requset moment image
        âœ“ (Step 4)"HD163296_CO_2_1.hdf5": Receive all image data until RasterTileSync.endSync = true, within 5000ms (34ms)
        âœ“ Assert RASTER_TILE_SYNC.fileId (1ms)
        âœ“ Receive RASTER_TILE_DATA
        âœ“ Assert RASTER_TILE_DATA.fileId (1ms)

[999D[KTest Suites: 1 passed, 1 total
Tests:       42 passed, 42 total
Snapshots:   0 total
Time:        45.706s
Ran all test suites matching /PERF_MOMENTS.test.ts/i.
Force exiting Jest: Have you considered using `--detectOpenHandles` to detect async operations that kept running after all tests finished?
